# -*- Mode: makefile -*-
#
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is Nanojit Build System.
#
# The Initial Developer of the Original Code is Mozilla Corporation.
# Portions created by the Initial Developer are Copyright (C) 2009
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#   Graydon Hoare <graydon@mozilla.com>
#
# Alternatively, the contents of this file may be used under the terms of
# either of the GNU General Public License Version 2 or later (the "GPL"),
# or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****

##################
# autoconf imports
##################

CC := @CC@
CXX := @CXX@
GNU_CC := @GNU_CC@
LD := @LD@
NANOJIT_ARCH := @NANOJIT_ARCH@
DEFS := @DEFS@ -DNANOJIT_CENTRAL
srcdir := @srcdir@
CFLAGS := @CFLAGS@
LDFLAGS := @LDFLAGS@
CXXFLAGS := @CXXFLAGS@
WARNINGS_AS_ERRORS := @WARNINGS_AS_ERRORS@
EXE_SUFFIX := @EXE_SUFFIX@
OBJ_SUFFIX := @OBJ_SUFFIX@

# NB: delayed substitution on this one.
LINK = @LINK@

#######################
# normal GNU make rules
#######################

VPATH = $(srcdir)              \
        $(srcdir)/nanojit      \
        $(srcdir)/vprof        \
        $(srcdir)/lirasm       \
        $(srcdir)/lirasm/tests

NATIVE_SRC=Native$(NANOJIT_ARCH).cpp
OTHER_SRCS=Allocator.cpp       \
           Assembler.cpp       \
           avmplus.cpp         \
           CodeAlloc.cpp       \
           Containers.cpp      \
           Fragmento.cpp       \
           LIR.cpp             \
           lirasm.cpp          \
           RegAlloc.cpp        \
           VMPI.cpp            \
           vprof.cpp


SRCS := $(OTHER_SRCS) $(NATIVE_SRC)
HDRS := $(wildcard $(srcdir)/nanojit/*.h)
INS := $(wildcard $(srcdir)/lirasm/tests/*.in)

OBJS := $(notdir $(SRCS:.cpp=$(OBJ_SUFFIX)))
OUTS := $(filter-out random.out, $(notdir $(INS:.in=.out)))

LIRASM := bin/lirasm$(EXE_SUFFIX)
MAKE_CHECK_LIRASM_FLAGS ?=

CPPFLAGS += $(DEFS)
CPPFLAGS += -I. -I$(srcdir) -I$(srcdir)/nanojit

#############
# Build rules
#############

$(LIRASM): $(OBJS)
	mkdir -p $(dir $(LIRASM))
	$(call LINK,$@) $(OBJS)
	chmod 0755 $(LIRASM)

%$(OBJ_SUFFIX): %.cpp $(HDRS) Makefile
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(WARNINGS_AS_ERRORS) -c $<


############
# Test rules
############

.PHONY: check random-check

check: $(LIRASM) $(OUTS) random-check

RANDOM_SIZE = 1000000

random-check:
	@ if $(LIRASM) --execute --random $(RANDOM_SIZE) ; \
	  then echo "TEST-PASS | lirasm | $(LIRASM) --random $(RANDOM_SIZE) --execute" ; \
	  else echo "TEST-UNEXPECTED-FAIL | lirasm | $(LIRASM) --random $(RANDOM_SIZE) --execute" ; \
	  fi

%.out: %.in $(LIRASM)
	@ $(LIRASM) $(MAKE_CHECK_LIRASM_FLAGS) --execute $< | tr -d "\r" >$@ 2>&1 || true
	@ if cmp -s $@ $(<:.in=.out) ; \
      then echo "TEST-PASS | lirasm | $(LIRASM) $(MAKE_CHECK_LIRASM_FLAGS) --execute $<" ;              \
      else echo "TEST-UNEXPECTED-FAIL | lirasm | $(LIRASM) $(MAKE_CHECK_LIRASM_FLAGS) --execute $<" ;   \
      echo expected output ;       \
      cat $(<:.in=.out) ;          \
      echo actual output ;         \
      cat $@ ;                     \
      fi
	@ rm -f $@


###################
# Reconfigury rules
###################

$(srcdir)/configure: configure.in
	cd $(srcdir) && autoconf

Makefile: configure Makefile.in
	$<
